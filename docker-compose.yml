version: '3.3'

services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: reverse_proxy
    ports: 
      - "80:80" #HTTP
      - "443:443" #HTTPS
    environment:
      - "VIRTUAL_PROTO=https"
      - "DEFAULT_HOST=test.local" #access from IP 
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
      - ./certs:/etc/nginx/certs
      - vhostd:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
    restart: always
  
  wordpress1:
    build: ./docker
    container_name: wordpress_1
    links: 
     - mariadb:mysql
    expose: 
     - 80
    environment: 
     - WORDPRESS_DB_PASSWORD=qwertyqwerty
     - WORDPRESS_DB_USER=userwp
     - WORDPRESS_DB_NAME=wpdb
     - "VIRTUAL_PORT=80"
     - "VIRTUAL_HOST=test.local"
    volumes: 
     - ./wordpress:/var/www/html
    restart: always

  wordpress2:
    build: ./docker
    container_name: wordpress_2
    links: 
     - mariadb:mysql
    expose: 
     - 80
    environment: 
     - WORDPRESS_DB_PASSWORD=qwertyqwerty
     - WORDPRESS_DB_USER=userwp
     - WORDPRESS_DB_NAME=wpdb
     - "VIRTUAL_PORT=80"
     - "VIRTUAL_HOST=test.local"
    volumes: 
     - ./wordpress:/var/www/html
    restart: always

  wordpress3:
    build: ./docker
    container_name: wordpress_3
    links: 
     - mariadb:mysql
    expose: 
     - 80
    environment: 
     - WORDPRESS_DB_PASSWORD=qwertyqwerty
     - WORDPRESS_DB_USER=userwp
     - WORDPRESS_DB_NAME=wpdb
     - "VIRTUAL_PORT=80"
     - "VIRTUAL_HOST=test.local"
    volumes: 
     - ./wordpress:/var/www/html
    restart: always

  mariadb:
    image: mariadb
    container_name: database
    environment: 
     - MYSQL_ROOT_PASSWORD=qwerty
     - MYSQL_DATABASE=wpdb
     - MYSQL_USER=userwp
     - MYSQL_PASSWORD=qwertyqwerty
    volumes: 
     - ./database:/var/lib/mysql

  redis:
    image: redis:4.0.9
    container_name: redis_cache
    restart: always
    ports:
     - "6379:6379"
    volumes:
     - ./redis_conf:/usr/local/etc/redis

  netdata:
    container_name: netdata
    ports: 
      - '19999:19999'
    volumes: 
      - '/proc:/host/proc:ro'
      - '/sys:/host/sys:ro'
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    image: netdata/netdata

volumes: 
  html:
  vhostd: